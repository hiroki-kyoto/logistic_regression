DROP TABLE DYL_2G_LOST_FLAG_WEAL;
CREATE TABLE DYL_2G_LOST_FLAG_WEAL (
	MONTH_ID					VARCHAR2(6),
	PROV_ID						VARCHAR2(3),
	AREA_ID						VARCHAR2(10),
	USER_ID						VARCHAR2(40),
/*	DEVICE_NUMBER				VARCHAR2(20), */
	SERVICE_TYPE				VARCHAR2(20),
	PAY_MODE					VARCHAR2(10),
	PRODUCT_ID					VARCHAR2(20),
	PRODUCT_MODE				VARCHAR2(20),
	CHNL_ID						VARCHAR2(20),
	USER_STATUS					VARCHAR2(10),
	CUST_ID						VARCHAR2(40),
	IS_GRP_MBR					VARCHAR2(1),
	IS_INNET					VARCHAR2(20),
	IS_THIS_ACCT				VARCHAR2(1),
	IS_FREE						CHAR(1),
	STOP_MONTH					NUMBER,
	LAST_STOP_DATE				VARCHAR2(12),
	INNET_MONTHS				NUMBER,
	FLUXMOST1MON_IMEI			VARCHAR2(30),
	USE_TERM_TYPE				VARCHAR2(2),
	IS_TERM_IPHONE				VARCHAR2(2),
	IS_USE_SMART				VARCHAR2(2),
	USER_3WU					CHAR(1),
	IS_ACTIVE					VARCHAR2(1),
	IS_LOWER_VALUE_USER			NUMBER,
	USE_STATUS_INNET			VARCHAR2(1),
	TOTAL_FLUX					NUMBER,
	LOCAL_FLUX					NUMBER,
	LOCAL_FLUX_ZB				NUMBER,
	JF_TIMES					NUMBER,
	NOROAM_LOCAL_JF_TIMES		NUMBER,
	NOROAM_LONG_JF_TIMES		NUMBER,
	ROAM_ZB						NUMBER,
	ZHUJIAO_ZB					NUMBER,
	CDR_NUM						NUMBER,
	TOLL_NUMS_ZB				NUMBER,
	VIP_LEVEL					VARCHAR2(2),
	ACCT_FEE					NUMBER,
	ROAM_VOICE_FEE				NUMBER,
	ZENGZHI_FEE					NUMBER,
	OWE_FEE						NUMBER,
	OVERDUE_OWE_FEE				NUMBER,
	P2P_SMS_CNT					NUMBER,
	FLUX_NUM					NUMBER,
	FLUX_TIME					NUMBER,
	YQ_OWE_MONTHS				NUMBER,
	STDEV_CDR_NUM				NUMBER,
	VAR_CDR_NUM					NUMBER,
	CALL_DAYS					NUMBER,
	LAST_CALL_TIME				VARCHAR2(20),
	CALL_DURA_LAST7_CN			NUMBER,
	OTHER_MOBILE_RING			NUMBER,
	CELLID_NUM					NUMBER,
	CALLING_YIWANG				NUMBER,
	NET_TYPE					VARCHAR2(2),
	MANU_NAME					VARCHAR2(512),
	/*DEV_NUM_SHANG				VARCHAR2(20),*/
	LOST_FLAG					VARCHAR2(1)
);


DROP PROCEDURE P_DYL_2G_LOST_FLAG_WEAL;
CREATE PROCEDURE P_DYL_2G_LOST_FLAG_WEAL(V_MONTH   IN VARCHAR2,
                                                     V_PROV    IN VARCHAR2,
                                                     V_RETCODE OUT VARCHAR2,
                                                     V_RETINFO OUT VARCHAR2) IS
  V_PKG      VARCHAR2(30);
  V_TAB      VARCHAR2(300);
  V_PROCNAME VARCHAR2(300);
  V_ROWLINE  NUMBER;
  V_COUNT    NUMBER;
  V_SQL      LONG;
  V_LOG_SN   NUMBER;
BEGIN
  V_PKG      := 'LOST_2G';
  V_TAB      := 'DYL_2G_LOST_FLAG_WEAL';
  V_PROCNAME := 'P_DYL_2G_LOST_FLAG_WEAL';
  
INSERT INTO DYL_2G_LOST_FLAG_WEAL
SELECT
NVL(MONTH_ID,0) MONTH_ID,
NVL(PROV_ID,0) PROV_ID,
NVL(AREA_ID,0) AREA_ID,
NVL(USER_ID,0) USER_ID,
/*NVL(DEVICE_NUMBER,0) DEVICE_NUMBER,*/
NVL(SERVICE_TYPE,0) SERVICE_TYPE,
NVL(PAY_MODE,0) PAY_MODE,
NVL(PRODUCT_ID,0) PRODUCT_ID,
NVL(PRODUCT_MODE,0) PRODUCT_MODE,
NVL(CHNL_ID,0) CHNL_ID,
NVL(USER_STATUS,0) USER_STATUS,
NVL(CUST_ID,0) CUST_ID,
NVL(IS_GRP_MBR,0) IS_GRP_MBR,
NVL(IS_INNET,0) IS_INNET,
NVL(IS_THIS_ACCT,0) IS_THIS_ACCT,
NVL(IS_FREE,0) IS_FREE,
NVL(STOP_MONTH,0) STOP_MONTH,
CASE WHEN NVL(LAST_STOP_DATE,0) = 0 THEN 0 ELSE V_MONTH - NVL(LAST_STOP_DATE,0) END  LAST_STOP_DATE,
NVL(INNET_MONTHS,0) INNET_MONTHS,
NVL(FLUXMOST1MON_IMEI,0) FLUXMOST1MON_IMEI,
NVL(USE_TERM_TYPE,0) USE_TERM_TYPE,
NVL(IS_TERM_IPHONE,0) IS_TERM_IPHONE,
NVL(IS_USE_SMART,0) IS_USE_SMART,
NVL(USER_3WU,0) USER_3WU,
NVL(IS_ACTIVE,0) IS_ACTIVE,
NVL(IS_LOWER_VALUE_USER,0) IS_LOWER_VALUE_USER,
NVL(USE_STATUS_INNET,0) USE_STATUS_INNET,
NVL(TOTAL_FLUX,0) TOTAL_FLUX,
NVL(LOCAL_FLUX,0) LOCAL_FLUX,
NVL(LOCAL_FLUX,0)/DECODE(NVL(TOTAL_FLUX,0),0,1,NVL(TOTAL_FLUX,0)) LOCAL_FLUX_ZB ,
NVL(JF_TIMES,0) JF_TIMES,
NVL(NOROAM_LOCAL_JF_TIMES,0) NOROAM_LOCAL_JF_TIMES,
NVL(NOROAM_LONG_JF_TIMES,0) NOROAM_LONG_JF_TIMES,
NVL((ROAM_PROV_CALLING_TIMES + ROAM_COUN_CALLING_TIMES + GAT_ROAM_OUT_JF_TIMES + GJ_ROAM_OUT_JF_TIMES),0) / DECODE(NVL(JF_TIMES,0),0,1,NVL(JF_TIMES,0)) ROAM_ZB,
NVL(OUT_JF_TIMES,0)/DECODE(NVL(JF_TIMES,0),0,1,NVL(JF_TIMES,0))  ZHUJIAO_ZB,
NVL(CDR_NUM,0) CDR_NUM,
NVL(TOLL_NUMS,0)/DECODE(NVL(CDR_NUM,0),0,1,NVL(CDR_NUM,0))  TOLL_NUMS_ZB,
NVL(VIP_LEVEL,0) VIP_LEVEL,
NVL(ACCT_FEE,0) ACCT_FEE,
NVL(ROAM_VOICE_FEE,0) ROAM_VOICE_FEE,
NVL((PHONE_TV_FEE + PHONE_NEWSPAPER_FEE + PHONE_MUSIC_FEE),0) ZENGZHI_FEE,
NVL(OWE_FEE,0) OWE_FEE,
NVL(OVERDUE_OWE_FEE,0) OVERDUE_OWE_FEE,
NVL(P2P_SMS_CNT,0) P2P_SMS_CNT,
NVL(FLUX_NUM,0) FLUX_NUM,
NVL(FLUX_TIME,0) FLUX_TIME,
NVL(YQ_OWE_MONTHS,0) YQ_OWE_MONTHS,
NVL(STDEV_CDR_NUM,0) STDEV_CDR_NUM,
NVL(VAR_CDR_NUM,0) VAR_CDR_NUM,
NVL(CALL_DAYS,0) CALL_DAYS,
CASE WHEN NVL(LAST_CALL_TIME,0) = 0 THEN 0 ELSE V_MONTH||30 - SUBSTR(NVL(LAST_CALL_TIME,0),1,8) END  LAST_CALL_TIME,
NVL((CALL_DURA_LAST7/7),0)/DECODE(NVL((CALL_DURA_FIRST20/23),0),0,1,NVL((CALL_DURA_FIRST20/23),0))  CALL_DURA_LAST7_CN,
NVL(OTHER_MOBILE_RING,0) OTHER_MOBILE_RING,
NVL(CELLID_NUM,0) CELLID_NUM,
NVL(CALLING_MOBILE_PHONE_CDR + CALLING_TELE_PHONE_CDR,0) CALLING_YIWANG,
NVL(NET_TYPE,0) NET_TYPE,
NVL(MANU_NAME,0) MANU_NAME,
/*NVL(DEV_NUM_SHANG,0) DEV_NUM_SHANG,*/
1 LOST_FLAG
FROM DYL_2G_LOST_FLAG
WHERE MONTH_ID = V_MONTH
AND PROV_ID = V_PROV
;
V_ROWLINE := SQL%ROWCOUNT;
COMMIT;

V_RETCODE := 'SUCCESS';
V_RETINFO := 'FINISHED';
EXCEPTION
  WHEN OTHERS THEN
    V_RETCODE := 'FAIL';
    V_RETINFO := SQLERRM;
END;
/
EXIT